# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Тестирование и сборка frontend
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Get bun cache directory
      id: bun-cache
      run: echo "dir=$(bun pm cache)" >> $GITHUB_OUTPUT
      
    - name: Cache bun dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.bun-cache.outputs.dir }}
        key: bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          bun-
          
    - name: Install dependencies
      run: bun install
      
    - name: Type check
      run: bun run tsc --noEmit
      
    - name: Run tests
      run: bun test
      
    - name: Build application
      run: bun run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        retention-days: 1

  # Тестирование backend
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Run tests
      run: bun test
      
    - name: Build backend
      run: bun run build

  # Сборка Android APK (только для main branch)
  android-build:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install frontend dependencies and build
      working-directory: ./frontend
      run: |
        bun install
        bun run build
        
    - name: Initialize Capacitor
      working-directory: ./frontend
      run: |
        # Проверяем, инициализирован ли уже Capacitor
        if [ ! -f "capacitor.config.ts" ]; then
          bunx @capacitor/cli init MyApp com.example.myapp
        fi
        bunx @capacitor/cli add android
        
    - name: Sync Capacitor
      working-directory: ./frontend
      run: bunx @capacitor/cli sync
      
    - name: Build Android APK
      working-directory: ./frontend/android
      run: |
        chmod +x gradlew
        ./gradlew assembleDebug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: frontend/android/app/build/outputs/apk/debug/
        retention-days: 30
