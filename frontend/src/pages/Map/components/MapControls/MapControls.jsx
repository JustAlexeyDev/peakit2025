// src/pages/Map/components/MapControls.jsx
import React from 'react';
import './MapControls.css';

const MapControls = ({ 
  mapRef, 
  userLocation, 
  onStartRoute, 
  isOffline,
  onZoomIn,
  onZoomOut,
  center,
  zoom
}) => {
  
  const handleCurrentPosition = () => {
    if (userLocation && mapRef.current) {
      mapRef.current.setCenter(userLocation, 12);
    } else {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (position) => {
            const { latitude, longitude } = position.coords;
            const newLocation = [latitude, longitude];
            if (mapRef.current) {
              mapRef.current.setCenter(newLocation, 12);
            }
          },
          (error) => {
            console.error('Geolocation error:', error);
          },
          {
            enableHighAccuracy: true,
            timeout: 10000,
            maximumAge: 60000
          }
        );
      } else {
        console.error('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º');
      }
    }
  };

  const handleZoomIn = () => {
    if (mapRef.current) {
      const currentZoom = mapRef.current.getZoom();
      mapRef.current.setZoom(currentZoom + 1, { duration: 300 });
    }
  };

  const handleZoomOut = () => {
    if (mapRef.current) {
      const currentZoom = mapRef.current.getZoom();
      mapRef.current.setZoom(currentZoom - 1, { duration: 300 });
    }
  };

  const handleResetView = () => {
    if (mapRef.current) {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É –≤–∏–¥—É (–Ø–∫—É—Ç—Å–∫)
      mapRef.current.setCenter([62.03, 129.73], 8, { duration: 500 });
    }
  };

  return (
    <div className="map-controls">
      {/* –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞ */}
      {/* <button 
        className="map-controls__btn map-controls__btn--primary"
        onClick={onStartRoute}
        title="–ù–∞—á–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç"
      >
        üöó –°—Ç–∞—Ä—Ç
      </button> */}

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      <div className="map-controls__group">
        <button 
          className="map-controls__btn map-controls__btn--location"
          onClick={handleCurrentPosition}
          title="–¢–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"
        >
          {userLocation ? 'üìç' : 'üîç'}
        </button>
        
        <div className="map-controls__zoom">
          <button 
            className="map-controls__btn map-controls__btn--zoom-in"
            onClick={handleZoomIn}
            title="–£–≤–µ–ª–∏—á–∏—Ç—å"
          >
            +
          </button>
          <button 
            className="map-controls__btn map-controls__btn--zoom-out"
            onClick={handleZoomOut}
            title="–£–º–µ–Ω—å—à–∏—Ç—å"
          >
            -
          </button>
        </div>
        
        <button 
          className="map-controls__btn map-controls__btn--reset"
          onClick={handleResetView}
          title="–°–±—Ä–æ—Å–∏—Ç—å –≤–∏–¥"
        >
          üè†
        </button>
      </div>

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞ */}
      {isOffline && (
        <div className="map-controls__offline">
          ‚ö° –û—Ñ–ª–∞–π–Ω
        </div>
      )}
    </div>
  );
};

export default MapControls;